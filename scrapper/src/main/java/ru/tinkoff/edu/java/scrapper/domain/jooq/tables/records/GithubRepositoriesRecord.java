/*
 * This file is generated by jOOQ.
 */
package ru.tinkoff.edu.java.scrapper.domain.jooq.tables.records;


import java.time.OffsetDateTime;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;

import ru.tinkoff.edu.java.scrapper.domain.jooq.tables.GithubRepositories;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GithubRepositoriesRecord extends UpdatableRecordImpl<GithubRepositoriesRecord> implements Record6<UUID, String, String, OffsetDateTime, OffsetDateTime, OffsetDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.github_repositories.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.github_repositories.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.github_repositories.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.github_repositories.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.github_repositories.username</code>.
     */
    public void setUsername(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.github_repositories.username</code>.
     */
    public String getUsername() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.github_repositories.created_at</code>.
     */
    public void setCreatedAt(OffsetDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.github_repositories.created_at</code>.
     */
    public OffsetDateTime getCreatedAt() {
        return (OffsetDateTime) get(3);
    }

    /**
     * Setter for <code>public.github_repositories.updated_at</code>.
     */
    public void setUpdatedAt(OffsetDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.github_repositories.updated_at</code>.
     */
    public OffsetDateTime getUpdatedAt() {
        return (OffsetDateTime) get(4);
    }

    /**
     * Setter for <code>public.github_repositories.issues_updated_at</code>.
     */
    public void setIssuesUpdatedAt(OffsetDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.github_repositories.issues_updated_at</code>.
     */
    public OffsetDateTime getIssuesUpdatedAt() {
        return (OffsetDateTime) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<UUID, String, String, OffsetDateTime, OffsetDateTime, OffsetDateTime> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<UUID, String, String, OffsetDateTime, OffsetDateTime, OffsetDateTime> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return GithubRepositories.GITHUB_REPOSITORIES.ID;
    }

    @Override
    public Field<String> field2() {
        return GithubRepositories.GITHUB_REPOSITORIES.NAME;
    }

    @Override
    public Field<String> field3() {
        return GithubRepositories.GITHUB_REPOSITORIES.USERNAME;
    }

    @Override
    public Field<OffsetDateTime> field4() {
        return GithubRepositories.GITHUB_REPOSITORIES.CREATED_AT;
    }

    @Override
    public Field<OffsetDateTime> field5() {
        return GithubRepositories.GITHUB_REPOSITORIES.UPDATED_AT;
    }

    @Override
    public Field<OffsetDateTime> field6() {
        return GithubRepositories.GITHUB_REPOSITORIES.ISSUES_UPDATED_AT;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getUsername();
    }

    @Override
    public OffsetDateTime component4() {
        return getCreatedAt();
    }

    @Override
    public OffsetDateTime component5() {
        return getUpdatedAt();
    }

    @Override
    public OffsetDateTime component6() {
        return getIssuesUpdatedAt();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getUsername();
    }

    @Override
    public OffsetDateTime value4() {
        return getCreatedAt();
    }

    @Override
    public OffsetDateTime value5() {
        return getUpdatedAt();
    }

    @Override
    public OffsetDateTime value6() {
        return getIssuesUpdatedAt();
    }

    @Override
    public GithubRepositoriesRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public GithubRepositoriesRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public GithubRepositoriesRecord value3(String value) {
        setUsername(value);
        return this;
    }

    @Override
    public GithubRepositoriesRecord value4(OffsetDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public GithubRepositoriesRecord value5(OffsetDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public GithubRepositoriesRecord value6(OffsetDateTime value) {
        setIssuesUpdatedAt(value);
        return this;
    }

    @Override
    public GithubRepositoriesRecord values(UUID value1, String value2, String value3, OffsetDateTime value4, OffsetDateTime value5, OffsetDateTime value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached GithubRepositoriesRecord
     */
    public GithubRepositoriesRecord() {
        super(GithubRepositories.GITHUB_REPOSITORIES);
    }

    /**
     * Create a detached, initialised GithubRepositoriesRecord
     */
    public GithubRepositoriesRecord(UUID id, String name, String username, OffsetDateTime createdAt, OffsetDateTime updatedAt, OffsetDateTime issuesUpdatedAt) {
        super(GithubRepositories.GITHUB_REPOSITORIES);

        setId(id);
        setName(name);
        setUsername(username);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        setIssuesUpdatedAt(issuesUpdatedAt);
    }
}
