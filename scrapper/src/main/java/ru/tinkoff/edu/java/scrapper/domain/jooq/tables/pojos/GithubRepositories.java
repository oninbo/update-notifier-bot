/*
 * This file is generated by jOOQ.
 */
package ru.tinkoff.edu.java.scrapper.domain.jooq.tables.pojos;


import java.io.Serializable;
import java.time.OffsetDateTime;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GithubRepositories implements Serializable {

    private static final long serialVersionUID = 1L;

    private UUID id;
    private String name;
    private String username;
    private OffsetDateTime createdAt;
    private OffsetDateTime updatedAt;
    private OffsetDateTime issuesUpdatedAt;

    public GithubRepositories() {}

    public GithubRepositories(GithubRepositories value) {
        this.id = value.id;
        this.name = value.name;
        this.username = value.username;
        this.createdAt = value.createdAt;
        this.updatedAt = value.updatedAt;
        this.issuesUpdatedAt = value.issuesUpdatedAt;
    }

    public GithubRepositories(
        UUID id,
        String name,
        String username,
        OffsetDateTime createdAt,
        OffsetDateTime updatedAt,
        OffsetDateTime issuesUpdatedAt
    ) {
        this.id = id;
        this.name = name;
        this.username = username;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
        this.issuesUpdatedAt = issuesUpdatedAt;
    }

    /**
     * Getter for <code>public.github_repositories.id</code>.
     */
    public UUID getId() {
        return this.id;
    }

    /**
     * Setter for <code>public.github_repositories.id</code>.
     */
    public void setId(UUID id) {
        this.id = id;
    }

    /**
     * Getter for <code>public.github_repositories.name</code>.
     */
    public String getName() {
        return this.name;
    }

    /**
     * Setter for <code>public.github_repositories.name</code>.
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for <code>public.github_repositories.username</code>.
     */
    public String getUsername() {
        return this.username;
    }

    /**
     * Setter for <code>public.github_repositories.username</code>.
     */
    public void setUsername(String username) {
        this.username = username;
    }

    /**
     * Getter for <code>public.github_repositories.created_at</code>.
     */
    public OffsetDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>public.github_repositories.created_at</code>.
     */
    public void setCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * Getter for <code>public.github_repositories.updated_at</code>.
     */
    public OffsetDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Setter for <code>public.github_repositories.updated_at</code>.
     */
    public void setUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    /**
     * Getter for <code>public.github_repositories.issues_updated_at</code>.
     */
    public OffsetDateTime getIssuesUpdatedAt() {
        return this.issuesUpdatedAt;
    }

    /**
     * Setter for <code>public.github_repositories.issues_updated_at</code>.
     */
    public void setIssuesUpdatedAt(OffsetDateTime issuesUpdatedAt) {
        this.issuesUpdatedAt = issuesUpdatedAt;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final GithubRepositories other = (GithubRepositories) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.name == null) {
            if (other.name != null)
                return false;
        }
        else if (!this.name.equals(other.name))
            return false;
        if (this.username == null) {
            if (other.username != null)
                return false;
        }
        else if (!this.username.equals(other.username))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        if (this.updatedAt == null) {
            if (other.updatedAt != null)
                return false;
        }
        else if (!this.updatedAt.equals(other.updatedAt))
            return false;
        if (this.issuesUpdatedAt == null) {
            if (other.issuesUpdatedAt != null)
                return false;
        }
        else if (!this.issuesUpdatedAt.equals(other.issuesUpdatedAt))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.name == null) ? 0 : this.name.hashCode());
        result = prime * result + ((this.username == null) ? 0 : this.username.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.updatedAt == null) ? 0 : this.updatedAt.hashCode());
        result = prime * result + ((this.issuesUpdatedAt == null) ? 0 : this.issuesUpdatedAt.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("GithubRepositories (");

        sb.append(id);
        sb.append(", ").append(name);
        sb.append(", ").append(username);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(updatedAt);
        sb.append(", ").append(issuesUpdatedAt);

        sb.append(")");
        return sb.toString();
    }
}
