/*
 * This file is generated by jOOQ.
 */
package ru.tinkoff.edu.java.scrapper.domain.jooq.tables.records;


import java.time.OffsetDateTime;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;

import ru.tinkoff.edu.java.scrapper.domain.jooq.tables.Links;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LinksRecord extends UpdatableRecordImpl<LinksRecord> implements Record6<UUID, String, OffsetDateTime, UUID, UUID, UUID> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.links.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.links.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.links.url</code>.
     */
    public void setUrl(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.links.url</code>.
     */
    public String getUrl() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.links.created_at</code>.
     */
    public void setCreatedAt(OffsetDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.links.created_at</code>.
     */
    public OffsetDateTime getCreatedAt() {
        return (OffsetDateTime) get(2);
    }

    /**
     * Setter for <code>public.links.tg_chat_id</code>.
     */
    public void setTgChatId(UUID value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.links.tg_chat_id</code>.
     */
    public UUID getTgChatId() {
        return (UUID) get(3);
    }

    /**
     * Setter for <code>public.links.github_repository_id</code>.
     */
    public void setGithubRepositoryId(UUID value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.links.github_repository_id</code>.
     */
    public UUID getGithubRepositoryId() {
        return (UUID) get(4);
    }

    /**
     * Setter for <code>public.links.stackoverflow_question_id</code>.
     */
    public void setStackoverflowQuestionId(UUID value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.links.stackoverflow_question_id</code>.
     */
    public UUID getStackoverflowQuestionId() {
        return (UUID) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<UUID, String, OffsetDateTime, UUID, UUID, UUID> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<UUID, String, OffsetDateTime, UUID, UUID, UUID> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Links.LINKS.ID;
    }

    @Override
    public Field<String> field2() {
        return Links.LINKS.URL;
    }

    @Override
    public Field<OffsetDateTime> field3() {
        return Links.LINKS.CREATED_AT;
    }

    @Override
    public Field<UUID> field4() {
        return Links.LINKS.TG_CHAT_ID;
    }

    @Override
    public Field<UUID> field5() {
        return Links.LINKS.GITHUB_REPOSITORY_ID;
    }

    @Override
    public Field<UUID> field6() {
        return Links.LINKS.STACKOVERFLOW_QUESTION_ID;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getUrl();
    }

    @Override
    public OffsetDateTime component3() {
        return getCreatedAt();
    }

    @Override
    public UUID component4() {
        return getTgChatId();
    }

    @Override
    public UUID component5() {
        return getGithubRepositoryId();
    }

    @Override
    public UUID component6() {
        return getStackoverflowQuestionId();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getUrl();
    }

    @Override
    public OffsetDateTime value3() {
        return getCreatedAt();
    }

    @Override
    public UUID value4() {
        return getTgChatId();
    }

    @Override
    public UUID value5() {
        return getGithubRepositoryId();
    }

    @Override
    public UUID value6() {
        return getStackoverflowQuestionId();
    }

    @Override
    public LinksRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public LinksRecord value2(String value) {
        setUrl(value);
        return this;
    }

    @Override
    public LinksRecord value3(OffsetDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public LinksRecord value4(UUID value) {
        setTgChatId(value);
        return this;
    }

    @Override
    public LinksRecord value5(UUID value) {
        setGithubRepositoryId(value);
        return this;
    }

    @Override
    public LinksRecord value6(UUID value) {
        setStackoverflowQuestionId(value);
        return this;
    }

    @Override
    public LinksRecord values(UUID value1, String value2, OffsetDateTime value3, UUID value4, UUID value5, UUID value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LinksRecord
     */
    public LinksRecord() {
        super(Links.LINKS);
    }

    /**
     * Create a detached, initialised LinksRecord
     */
    public LinksRecord(UUID id, String url, OffsetDateTime createdAt, UUID tgChatId, UUID githubRepositoryId, UUID stackoverflowQuestionId) {
        super(Links.LINKS);

        setId(id);
        setUrl(url);
        setCreatedAt(createdAt);
        setTgChatId(tgChatId);
        setGithubRepositoryId(githubRepositoryId);
        setStackoverflowQuestionId(stackoverflowQuestionId);
    }
}
