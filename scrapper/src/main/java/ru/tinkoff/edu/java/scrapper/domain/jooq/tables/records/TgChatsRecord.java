/*
 * This file is generated by jOOQ.
 */
package ru.tinkoff.edu.java.scrapper.domain.jooq.tables.records;


import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;

import ru.tinkoff.edu.java.scrapper.domain.jooq.tables.TgChats;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TgChatsRecord extends UpdatableRecordImpl<TgChatsRecord> implements Record2<UUID, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.tg_chats.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.tg_chats.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.tg_chats.chat_id</code>.
     */
    public void setChatId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.tg_chats.chat_id</code>.
     */
    public Long getChatId() {
        return (Long) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<UUID, Long> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<UUID, Long> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return TgChats.TG_CHATS.ID;
    }

    @Override
    public Field<Long> field2() {
        return TgChats.TG_CHATS.CHAT_ID;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getChatId();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getChatId();
    }

    @Override
    public TgChatsRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public TgChatsRecord value2(Long value) {
        setChatId(value);
        return this;
    }

    @Override
    public TgChatsRecord values(UUID value1, Long value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TgChatsRecord
     */
    public TgChatsRecord() {
        super(TgChats.TG_CHATS);
    }

    /**
     * Create a detached, initialised TgChatsRecord
     */
    public TgChatsRecord(UUID id, Long chatId) {
        super(TgChats.TG_CHATS);

        setId(id);
        setChatId(chatId);
    }
}
