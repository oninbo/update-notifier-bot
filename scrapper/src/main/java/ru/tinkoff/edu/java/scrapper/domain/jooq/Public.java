/*
 * This file is generated by jOOQ.
 */
package ru.tinkoff.edu.java.scrapper.domain.jooq;


import java.util.Arrays;
import java.util.List;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;

import ru.tinkoff.edu.java.scrapper.domain.jooq.tables.Databasechangelog;
import ru.tinkoff.edu.java.scrapper.domain.jooq.tables.Databasechangeloglock;
import ru.tinkoff.edu.java.scrapper.domain.jooq.tables.GithubRepositories;
import ru.tinkoff.edu.java.scrapper.domain.jooq.tables.Links;
import ru.tinkoff.edu.java.scrapper.domain.jooq.tables.StackoverflowQuestions;
import ru.tinkoff.edu.java.scrapper.domain.jooq.tables.TgChats;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Public extends SchemaImpl {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public</code>
     */
    public static final Public PUBLIC = new Public();

    /**
     * The table <code>public.databasechangelog</code>.
     */
    public final Databasechangelog DATABASECHANGELOG = Databasechangelog.DATABASECHANGELOG;

    /**
     * The table <code>public.databasechangeloglock</code>.
     */
    public final Databasechangeloglock DATABASECHANGELOGLOCK = Databasechangeloglock.DATABASECHANGELOGLOCK;

    /**
     * The table <code>public.github_repositories</code>.
     */
    public final GithubRepositories GITHUB_REPOSITORIES = GithubRepositories.GITHUB_REPOSITORIES;

    /**
     * The table <code>public.links</code>.
     */
    public final Links LINKS = Links.LINKS;

    /**
     * The table <code>public.stackoverflow_questions</code>.
     */
    public final StackoverflowQuestions STACKOVERFLOW_QUESTIONS = StackoverflowQuestions.STACKOVERFLOW_QUESTIONS;

    /**
     * The table <code>public.tg_chats</code>.
     */
    public final TgChats TG_CHATS = TgChats.TG_CHATS;

    /**
     * No further instances allowed
     */
    private Public() {
        super("public", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.asList(
            Databasechangelog.DATABASECHANGELOG,
            Databasechangeloglock.DATABASECHANGELOGLOCK,
            GithubRepositories.GITHUB_REPOSITORIES,
            Links.LINKS,
            StackoverflowQuestions.STACKOVERFLOW_QUESTIONS,
            TgChats.TG_CHATS
        );
    }
}
