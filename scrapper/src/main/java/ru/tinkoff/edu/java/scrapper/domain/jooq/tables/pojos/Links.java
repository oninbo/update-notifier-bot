/*
 * This file is generated by jOOQ.
 */
package ru.tinkoff.edu.java.scrapper.domain.jooq.tables.pojos;


import java.io.Serializable;
import java.time.OffsetDateTime;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Links implements Serializable {

    private static final long serialVersionUID = 1L;

    private UUID id;
    private String url;
    private OffsetDateTime createdAt;
    private UUID tgChatId;
    private UUID githubRepositoryId;
    private UUID stackoverflowQuestionId;

    public Links() {}

    public Links(Links value) {
        this.id = value.id;
        this.url = value.url;
        this.createdAt = value.createdAt;
        this.tgChatId = value.tgChatId;
        this.githubRepositoryId = value.githubRepositoryId;
        this.stackoverflowQuestionId = value.stackoverflowQuestionId;
    }

    public Links(
        UUID id,
        String url,
        OffsetDateTime createdAt,
        UUID tgChatId,
        UUID githubRepositoryId,
        UUID stackoverflowQuestionId
    ) {
        this.id = id;
        this.url = url;
        this.createdAt = createdAt;
        this.tgChatId = tgChatId;
        this.githubRepositoryId = githubRepositoryId;
        this.stackoverflowQuestionId = stackoverflowQuestionId;
    }

    /**
     * Getter for <code>public.links.id</code>.
     */
    public UUID getId() {
        return this.id;
    }

    /**
     * Setter for <code>public.links.id</code>.
     */
    public void setId(UUID id) {
        this.id = id;
    }

    /**
     * Getter for <code>public.links.url</code>.
     */
    public String getUrl() {
        return this.url;
    }

    /**
     * Setter for <code>public.links.url</code>.
     */
    public void setUrl(String url) {
        this.url = url;
    }

    /**
     * Getter for <code>public.links.created_at</code>.
     */
    public OffsetDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>public.links.created_at</code>.
     */
    public void setCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * Getter for <code>public.links.tg_chat_id</code>.
     */
    public UUID getTgChatId() {
        return this.tgChatId;
    }

    /**
     * Setter for <code>public.links.tg_chat_id</code>.
     */
    public void setTgChatId(UUID tgChatId) {
        this.tgChatId = tgChatId;
    }

    /**
     * Getter for <code>public.links.github_repository_id</code>.
     */
    public UUID getGithubRepositoryId() {
        return this.githubRepositoryId;
    }

    /**
     * Setter for <code>public.links.github_repository_id</code>.
     */
    public void setGithubRepositoryId(UUID githubRepositoryId) {
        this.githubRepositoryId = githubRepositoryId;
    }

    /**
     * Getter for <code>public.links.stackoverflow_question_id</code>.
     */
    public UUID getStackoverflowQuestionId() {
        return this.stackoverflowQuestionId;
    }

    /**
     * Setter for <code>public.links.stackoverflow_question_id</code>.
     */
    public void setStackoverflowQuestionId(UUID stackoverflowQuestionId) {
        this.stackoverflowQuestionId = stackoverflowQuestionId;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Links other = (Links) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.url == null) {
            if (other.url != null)
                return false;
        }
        else if (!this.url.equals(other.url))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        if (this.tgChatId == null) {
            if (other.tgChatId != null)
                return false;
        }
        else if (!this.tgChatId.equals(other.tgChatId))
            return false;
        if (this.githubRepositoryId == null) {
            if (other.githubRepositoryId != null)
                return false;
        }
        else if (!this.githubRepositoryId.equals(other.githubRepositoryId))
            return false;
        if (this.stackoverflowQuestionId == null) {
            if (other.stackoverflowQuestionId != null)
                return false;
        }
        else if (!this.stackoverflowQuestionId.equals(other.stackoverflowQuestionId))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.url == null) ? 0 : this.url.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.tgChatId == null) ? 0 : this.tgChatId.hashCode());
        result = prime * result + ((this.githubRepositoryId == null) ? 0 : this.githubRepositoryId.hashCode());
        result = prime * result + ((this.stackoverflowQuestionId == null) ? 0 : this.stackoverflowQuestionId.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Links (");

        sb.append(id);
        sb.append(", ").append(url);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(tgChatId);
        sb.append(", ").append(githubRepositoryId);
        sb.append(", ").append(stackoverflowQuestionId);

        sb.append(")");
        return sb.toString();
    }
}
